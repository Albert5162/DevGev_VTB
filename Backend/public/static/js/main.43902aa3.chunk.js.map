{"version":3,"sources":["serviceWorker.js","components/counter/counterAPI.js","components/counter/counterSlice.js","components/auth/authSlice.js","images/registration.svg","components/auth/Login.jsx","components/datasetInfo/datasetInfoSlice.js","components/Loader.jsx","components/datahub/datahubSlice.js","components/datasetInfo/DatasetInfo.jsx","components/sidebar/sidebarSlice.js","components/DatasetList.jsx","components/marketplace/MarketplaceFilters.jsx","components/marketplace/marketplaceSlice.js","components/datahub/DatahubAuth.jsx","components/MainContent.jsx","components/Profile/Profile.jsx","components/marketplace/Marketplace.jsx","images/logo.svg","components/sidebar/Sidebar.jsx","Pages/Main.jsx","services/ProtectedRoute.jsx","components/auth/Registration.jsx","App.js","app/store.js","index.js","components/counter/Counter.module.css","components/auth/auth.module.css"],"names":["Boolean","window","location","hostname","match","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","signup","thunkAPI","companyName","login","password","axios","post","company","pass","headers","console","log","localStorage","setItem","defaults","common","rejectWithValue","signin","authSlice","isFetching","isSuccess","isError","errorMessage","clearState","rejected","Login","dispatch","useDispatch","history","useHistory","useSelector","auth","loginRef","useRef","passwordRef","loading","useEffect","current","toast","dismiss","error","push","className","styles","authBg","to","src","registrationImage","alt","onSubmit","e","preventDefault","htmlFor","ref","id","type","autoComplete","getDataset","urn","get","datasetModalSlice","dataset","selectedFields","openDataset","closeDataset","addField","removeField","filter","field","fieldPath","Loader","parseDatahub","url","username","datahubSlice","dataHubData","orderDataset","index","findIndex","_id","ordered","typeToColor","NUMBER","STRING","BOOLEAN","DATE","STRUCT","sidebarSlice","currentPage","setPage","DatasetList","list","map","onClick","setDataset","description","fichers","fk","user","filters","options","label","checked","MarketplaceFilters","useState","defaultOpen","open","Button","Panel","option","optionIdx","defaultValue","defaultChecked","as","getMarketData","marketplaceSlice","marketplaceData","DatahubAuth","urlRef","usernameRef","placeholder","getItem","pageToComponent","datahub","length","marketplace","isOpen","setIsOpen","isOrdered","setIsOrdered","datasetInfo","scope","schemaMetadata","fields","idx","onChange","target","checkboxHandler","split","join","selected","MainContent","sidebar","React","createElement","Sidebar","logo","page","Option","removeItem","Main","ProtectedRoute","Component","component","rest","render","props","pathname","from","Registration","companyRef","App","position","reverseOrder","exact","path","store","configureStore","reducer","counter","counterReducer","authReducer","sidebarReducer","datahubReducer","marketplaceReducer","datasetModalReducer","errorLink","onError","graphqlErrors","networkError","statusCode","replace","forEach","message","alert","httpLink","HttpLink","uri","authLink","setContext","_","token","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.43902aa3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport axios from 'axios'\n\nexport const signup = createAsyncThunk(\n \"auth/signup\",\n async ({companyName, login, password}, thunkAPI) => {\n   try {\n     const response = await axios.post(\"/registration\", { company: companyName, login, pass: password }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      })\n\n      let data = response.data\n      console.log(\"data\", data)\n\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", data)\n        localStorage.setItem(\"companyName\", companyName)\n        axios.defaults.headers.common['Authorization'] = `Bearer ${data}`\n        return { ...data, companyName }\n      } else {\n        return thunkAPI.rejectWithValue(data)\n      }\n    } catch (e) {\n      console.log(\"Error\", e.response.data)\n      return thunkAPI.rejectWithValue(e.response.data)\n    }\n  }\n)\n\nexport const signin = createAsyncThunk(\n  'auth/login',\n  async ({ login, password }, thunkAPI) => {\n    try {\n      const response = await axios.post('/sign_in', { login, password }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      })\n      let data = response.data\n      console.log('response', data)\n      \n      if (response.status === 200) {\n        localStorage.setItem('token', data)\n        axios.defaults.headers.common['Authorization'] = `Bearer ${data}`\n        return data;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log('Error', e.response.data);\n      thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\n\nconst initialState = {\n  isFetching: false,\n  isSuccess: false,\n  isError: false,\n  errorMessage: \"\",\n\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearState: (state) => {\n      state.isFetching = false\n      state.isSuccess = false\n      state.isError = false\n      state.errorMessage = \"\"\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(signup.pending, (state) => {\n        state.isFetching = true\n        state.isError = false\n        state.isSuccess = false\n      })\n      .addCase(signup.rejected, (state) => {\n        state.isError = true\n        state.isFetching = false\n        state.isSuccess = false\n      })\n      .addCase(signup.fulfilled, (state, action) => {\n        state.isFetching = false\n        state.isSuccess = true\n        state.isError = false\n      })\n      .addCase(signin.pending, (state) => {\n        state.isFetching = true\n        state.isError = false\n        state.isSuccess = false\n      })\n      .addCase(signin.rejected, (state) => {\n        state.isError = true\n        state.isFetching = false\n        state.isSuccess = false\n      })\n      .addCase(signin.fulfilled, (state, action) => {\n        state.isFetching = false\n        state.isError = false\n        state.isSuccess = true\n      })\n  },\n})\n\nexport const { clearState } = authSlice.actions;\n\nexport default authSlice.reducer","export default __webpack_public_path__ + \"static/media/registration.8529810d.svg\";","import { Link, useHistory } from 'react-router-dom';\nimport React, { useEffect, useRef } from 'react'\nimport { clearState, signin } from './authSlice'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport registrationImage from '../../images/registration.svg'\nimport styles from './auth.module.css';\nimport toast from 'react-hot-toast';\n\nexport default function Login() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n\n  const isError = useSelector(state => state.auth.isError)\n  const isFetching = useSelector(state => state.auth.isFetching)\n  const isSuccess = useSelector(state => state.auth.isSuccess)\n\n  const loginRef = useRef(null)\n  const passwordRef = useRef(null)\n  const loading = useRef(null)\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearState())\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isError) {\n      if (loading.current) toast.dismiss(loading.current)\n      toast.error(\"Произошла ошибка. Повторите попытку\")\n      loginRef.current.value = null\n      passwordRef.current.value = null\n    }\n  }, [isError])\n\n  useEffect(() => {\n    if (isSuccess) {\n      if (loading.current) toast.dismiss(loading.current)\n      history.push('/')\n    }\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (isFetching) {\n      if (loading.current) toast.dismiss(loading.current)\n      loading.current = toast.loading('Загрузка...')\n    }\n  }, [isFetching])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    const login = loginRef.current.value\n    const password = passwordRef.current.value\n\n    if (!login || !password) {\n      toast.error(\"Заполните все поля\")\n    } else {\n      dispatch(signin({login, password}))\n    }\n  }\n  \n  return (\n    <div className={`${styles.authBg}`}>\n      <div className=\"w-full h-screen filter blur-3xl absolute opacity-70 bg-white\">&nbsp;</div>\n      <div className=\"min-h-screen flex justify-center items-center py-12 px-6 lg:px-8\">\n        <div className=\"flex justify-center shadow-xl border border-gray-100 rounded-lg overflow-hidden z-50\">\n\n          <div className=\"sm:max-w-md bg-white border-r border-gray-100 py-2 px-4 flex flex-col\">\n            <h2 className=\"mt-6 text-center text-2xl font-extrabold text-gray-900\">Зайдите в профиль</h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600 max-w\">\n              Еще нет аккаунта?\n              <Link to=\"/sign-up\" className=\"font-medium text-blue-600 hover:text-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"> Создать</Link>\n            </p>\n            <div className=\"my-auto w-72\">\n              <img className=\"w-full\" src={registrationImage} alt=\"Workflow\" />\n            </div>\n          </div>\n\n          <div className=\"sm:w-full sm:max-w-md\">\n            <div className=\"bg-white py-8 px-6 sm:px-10\">\n              <form className=\"mb-0 space-y-6\" onSubmit={submitHandler}>\n                <div>\n                  <label htmlFor=\"login\" className=\"block text-sm font-medium text-gray-700\">Логин</label>\n                  <div className=\"mt-1\">\n                    <input ref={loginRef} id=\"login\" name=\"login\" type=\"text\" autoComplete=\"vtb-login\" />\n                  </div>\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Пароль</label>\n                  <div className=\"mt-1\">\n                    <input ref={passwordRef} id=\"password\" name=\"password\" type=\"password\" autoComplete=\"vtb-current-password\" />\n                  </div>\n                </div>\n                <div>\n                  <button type=\"submit\" className=\"mt-48 w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">Войти</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport axios from 'axios';\n\nexport const getDataset = createAsyncThunk(\n  \"datasetInfo/get\",\n  async (urn, thunkAPI) => {\n    try {\n      const response = await axios.get(`/showcase/${urn}`)\n\n      let data = response.data;\n      console.log(\"data\", data);\n\n      if (response.status === 200) {\n        return data;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log(\"Error\", e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  urn: null,\n  dataset: {},\n  loading: false,\n  isError: false,\n  selectedFields: []\n}\n\nconst datasetModalSlice = createSlice({\n  name: \"datasetInfo\",\n  initialState,\n  reducers: {\n    openDataset: (state, action) => {\n      state.urn = action.payload\n    },\n    closeDataset: (state) => {\n      state.urn = null\n      state.dataset = {}\n      state.loading = false\n      state.isError = false\n    },\n    addField: (state, action) => {\n      state.selectedFields.push(action.payload)\n    },\n    removeField: (state, action) => {\n      state.selectedFields = state.selectedFields.filter(field => field.fieldPath === action.payload.fieldPath)\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getDataset.pending, (state) => {\n        state.loading = true\n        state.isError = false\n      })\n      .addCase(getDataset.fulfilled, (state, action) => {\n        state.dataset = action.payload\n        state.loading = false\n        state.isError = false\n      })\n      .addCase(getDataset.rejected, (state, action) => {\n        state.loading = false\n        state.isError = true\n      })\n  },\n});\n\nexport const {\n  openDataset,\n  closeDataset,\n  addField,\n  removeField\n} = datasetModalSlice.actions\nexport default datasetModalSlice.reducer","import React from 'react'\n\nexport default function Loader() {\n  return (\n    <div className='flex'>\n      <div className=\"h-2.5 w-2.5 bg-current rounded-full mr-1 animate-bounce\"></div>\n      <div className=\"h-2.5 w-2.5 bg-current rounded-full mr-1 animate-bounce200\"></div>\n      <div className=\"h-2.5 w-2.5 bg-current rounded-full animate-bounce400\"></div>\n    </div>\n  )\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport axios from \"axios\";\n\nexport const parseDatahub = createAsyncThunk(\n  \"datahub/parse\",\n  async ({ url, username, password }, thunkAPI) => {\n    try {\n      const response = await axios.post(\n        \"/parse_dataHub\",\n        { url, username, password },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      let data = response.data;\n      console.log(\"data\", data);\n\n      if (response.status === 200) {\n        localStorage.setItem('dataHubUrl', url)\n        return data\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log(\"Error\", e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  dataHubData: []\n};\n\nconst datahubSlice = createSlice({\n  name: \"datahub\",\n  initialState,\n  reducers: {\n    orderDataset: (state, action) => {\n      let index = state.dataHubData.findIndex(dataset => dataset._id === action.payload._id)\n      if (~index) {\n        state.dataHubData[index].ordered = true\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(parseDatahub.fulfilled, (state, action) => {\n        state.dataHubData = action.payload\n      })\n  },\n});\n\nexport const {orderDataset} = datahubSlice.actions;\nexport default datahubSlice.reducer;\n","import { CogIcon, PlusIcon } from '@heroicons/react/outline'\nimport React, { useEffect, useState } from 'react'\nimport { addField, getDataset, removeField } from './datasetInfoSlice'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../Loader'\nimport {orderDataset} from '../datahub/datahubSlice'\n\nconst typeToColor = {\n  NUMBER: \"bg-green-100 text-green-800\",\n  STRING: \"bg-red-100 text-red-800\",\n  BOOLEAN: \"bg-indigo-100 text-indigo-800\",\n  DATE: \"bg-blue-100 text-blue-800\",\n  STRUCT: \"bg-gray-100 text-gray-800\"\n}\n\nexport default function DatasetInfo() {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isOrdered, setIsOrdered] = useState(false)\n  const dispatch = useDispatch()\n  const urn = useSelector(state => state.datasetInfo.urn)\n  const dataset = useSelector(state => state.datasetInfo.dataset)\n  const loading = useSelector(state => state.datasetInfo.loading)\n  const selectedFields = useSelector(state => state.datasetInfo.selectedFields)\n  console.log(selectedFields)\n\n  useEffect(() => {\n    dispatch(getDataset(urn))\n  }, [urn])\n\n  const checkboxHandler = (e, field) => {\n    if (e.target.checked) {\n      dispatch(addField(field))\n    } else {\n      dispatch(removeField(field))\n    }\n  }\n\n  return (\n    <>\n    {loading ? (\n      <div className=\"flex flex-col items-center justify-center h-screen w-full p-4\">\n        <Loader />\n      </div>\n    ) : (\n      <div className=\"flex flex-col p-4 text-left\">\n        {dataset.name && (\n          <>\n            <div className=\"flex items-center mt-2\">\n              <div className=\"flex flex-col \">\n                <h1 className=\"leading-7 font-bold text-2xl text-blue-500 \">{dataset.name}</h1>\n                <p className=\"text-md text-gray-600\">{dataset.description}</p>\n              </div>\n              {isOrdered && (\n                <p className=\"ml-4 text-md text-green-600\">Заказан</p>\n              )}\n            </div>\n\n            <div className=\"flex flex-col mt-4 justify-between\">\n              <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                  <div className=\"overflow-hidden border border-gray-200 rounded-3xl\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th\n                            scope=\"col\"\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                          >\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                          >\n                            Поле\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                          >\n                            Тип\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                          >\n                            Цена\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {dataset.schemaMetadata.fields.map((field,idx) => (\n                          <tr key={idx}>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">\n                                <input className=\"rounded focus:outline-none focus:ring-0 text-blue-500\" type=\"checkbox\" onChange={(e)=>checkboxHandler(e, field)} />\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">{field.fieldPath.split('.').join(' → ')}</div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${typeToColor[field.type]}`}>\n                                {field.type}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full text-gray-900`}>\n                                {idx+1 * 4 /10}﹩\n                              </span>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                    {isOpen ? (\n                      <div className=\"w-full py-2 px-8 border-t text-gray-800 flex items-center\">\n                        <label htmlFor=\"field\" className=\"mr-2\">Поле:</label>\n                        <input name=\"field\" type=\"text\" className=\"py-2 px-4 w-48 rounded-xl\" />\n                        <label htmlFor=\"select\" className=\"mr-2 ml-4\">Тип:</label>\n                        <select name=\"select\" className=\"w-48 rounded-xl\">\n                          <option value=\"value 1\">NUMBER</option>\n                          <option value=\"value 1\" selected>STRING</option>\n                          <option value=\"value 1\">BOOLEAN</option>\n                          <option value=\"value 1\">DATE</option>\n                          <option value=\"value 1\">STRUCT</option>\n                        </select>\n                        <button className=\"ml-2 h-full p-2 bg-gray-400 hover:bg-gray-500 text-white rounded-lg flex items-center\">\n                          <CogIcon className=\"w-5 h-5 mr-1\"/>\n                          Настройки\n                        </button>\n                        <button onClick={()=>setIsOpen(false)} className=\"ml-auto py-2 px-4 bg-red-400 hover:bg-red-500 text-white rounded-xl\">\n                          Отменить\n                        </button>\n                        <button className=\"ml-2 py-2 px-4 bg-blue-400 hover:bg-blue-500 text-white rounded-xl\">\n                          Подтвердить\n                        </button>\n                      </div>\n                    ) : (\n                      <button onClick={()=>setIsOpen(true)} className=\"w-full py-2 px-8 bg-blue-400 hover:bg-blue-500 text-white flex items-center justify-center\">\n                        <PlusIcon className=\"w-8 h-8\"/>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n              {!isOrdered && (\n                <button onClick={()=>setIsOrdered(true)} className=\"mt-4 w-full py-3 rounded-2xl px-8 bg-green-500 hover:bg-green-600 text-white flex items-center justify-center\">\n                  Заказать\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    )}\n    </>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  currentPage: \"Каталог\"\n}\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    setPage: (state, action) => {\n      state.currentPage = action.payload\n    }\n  }\n});\n\nexport const {\n  setPage\n} = sidebarSlice.actions\n\nexport default sidebarSlice.reducer","import { AdjustmentsIcon, LinkIcon, UserIcon } from '@heroicons/react/outline'\n\nimport React from 'react'\nimport { openDataset } from './datasetInfo/datasetInfoSlice'\nimport { setPage } from './sidebar/sidebarSlice'\nimport { useDispatch } from 'react-redux'\n\nexport default function DatasetList({list}) {\n  const dispatch = useDispatch()\n\n  const setDataset = (dataset) => {\n    dispatch(openDataset(dataset.urn))\n    dispatch(setPage(\"Датасет\"))\n  }\n\n  if (!list) return null\n\n  return (\n    <div className=\"flex w-full flex-col h-screen text-left overflow-y-scroll removeScroll px-4\">\n      {list.map(dataset => (\n        <div onClick={()=>setDataset(dataset)} key={dataset._id} className=\"h-24 px-8 bg-white rounded-3xl hover:shadow-lg border mb-4 cursor-pointer transition duration-200 ease-in-out\">\n          <div className=\"flex h-full items-center justify-between\">\n            <div className=\"flex flex-col\">\n              <h3>{dataset.name}</h3>\n              <p className=\"text-sm text-gray-600\">{dataset.description}</p>\n            </div>\n            <p className=\"text-sm text-green-600\">{dataset.ordered}</p>\n            <div className=\"flex pl-4\">\n              {dataset?.fichers > 0 && (\n                <div className=\"mr-2 flex items-center\">\n                  <AdjustmentsIcon className=\"w-5 h-5 mr-1\"/>\n                  {dataset.fichers}\n                </div>\n              )}\n              {dataset?.fk > 0 && (\n                <div className=\" flex items-center\">\n                  <LinkIcon className=\"w-5 h-5 mr-1\"/>\n                  {dataset.fk}\n                </div>\n              )}\n              {dataset?.user && (\n                <div className=\"flex items-center \">\n                  <UserIcon className=\"ml-2 h-5 w-5 mr-1\"/>\n                  <h3 className=\"cursor-pointer hover:underline\">{dataset.user}</h3>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import { Disclosure, Switch } from '@headlessui/react'\nimport React, {useState} from 'react'\n\nimport { CheckIcon } from '@heroicons/react/outline'\nimport { ChevronUpIcon } from '@heroicons/react/solid'\n\nconst filters = [\n  {\n    id: 'companies',\n    name: 'companies',\n    options: [\n      { value: 'ВТБ', label: 'ВТБ', checked: false },\n      { value: 'ФинТех', label: 'ФинТех', checked: false },\n      { value: 'SERGEY', label: 'SERGEY', checked: true },\n      { value: 'Sushi-Wok', label: 'Sushi-Wok', checked: false },\n    ],\n  },\n]\n\nexport default function MarketplaceFilters() {\n  const [enabled, setEnabled] = useState(false)\n  return (\n    <aside className=\"w-80 rounded-tl-3xl h-screen fixed right-0 bg-gray-100 ml-auto px-6\">\n        <h1 className=\"leading-7 font-bold text-2xl text-gray-800 mt-6\">Фильтры</h1>\n        <div className=\"w-full mt-4\">\n          <div className=\"w-full max-w-md p-2 mx-auto bg-white rounded-2xl\">\n            <Disclosure defaultOpen>\n              {({ open }) => (\n                <>\n                  <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-blue-900 bg-blue-100 rounded-lg hover:bg-blue-200 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 focus-visible:ring-opacity-75\">\n                    <span>Компания</span>\n                    <ChevronUpIcon\n                      className={`${\n                        open ? 'transform rotate-180' : ''\n                      } w-5 h-5 text-blue-500`}\n                    />\n                  </Disclosure.Button>\n                  <Disclosure.Panel className=\"px-4 pt-4 pb-2 text-sm text-left text-gray-500\">\n                    {filters[0].options.map((option, optionIdx) => (\n                      <div key={option.value} className=\"flex items-left\">\n                        <input\n                          id={`filter-mobile--${optionIdx}`}\n                          name={`[]`}\n                          defaultValue={option.value}\n                          type=\"checkbox\"\n                          defaultChecked={option.checked}\n                          className=\"h-4 w-4 border-gray-300 rounded text-blue-600 focus:ring-blue-500\"\n                        />\n                        <label\n                          htmlFor={`filter-mobile-${optionIdx}`}\n                          className=\"ml-3 min-w-0 flex-1 text-gray-500\"\n                        >\n                          {option.label}\n                        </label>\n                      </div>\n                    ))}\n                  </Disclosure.Panel>\n                </>\n              )}\n            </Disclosure>\n            <Disclosure as=\"div\" className=\"mt-2\">\n              {({ open }) => (\n                <>\n                  <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-blue-900 bg-blue-100 rounded-lg hover:bg-blue-200 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 focus-visible:ring-opacity-75\">\n                    <span>Цена</span>\n                    <ChevronUpIcon\n                      className={`${\n                        open ? 'transform rotate-180' : ''\n                      } w-5 h-5 text-blue-500`}\n                    />\n                  </Disclosure.Button>\n                  <Disclosure.Panel className=\"px-4 pt-4 pb-2 text-sm text-gray-500 text-left\">\n                    Фильтры по цене\n                  </Disclosure.Panel>\n                </>\n              )}\n            </Disclosure>\n            <Disclosure as=\"div\" className=\"mt-2\">\n              {({ open }) => (\n                <>\n                  <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-blue-900 bg-blue-100 rounded-lg hover:bg-blue-200 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 focus-visible:ring-opacity-75\">\n                    <span>Дата</span>\n                    <ChevronUpIcon\n                      className={`${\n                        open ? 'transform rotate-180' : ''\n                      } w-5 h-5 text-blue-500`}\n                    />\n                  </Disclosure.Button>\n                  <Disclosure.Panel className=\"px-4 pt-4 pb-2 text-sm text-left text-gray-500\">\n                    <label htmlFor=\"ot\" value=\"От\">От</label>\n                    <input name=\"ot\" type=\"date\" className=\"py-1 mb-2\"/>\n                    <label value=\"До\">До</label>\n                    <input htmlFor=\"do\" name=\"do\" type=\"date\" className=\"py-1\"/>\n                  </Disclosure.Panel>\n                </>\n              )}\n            </Disclosure>\n            <Disclosure as=\"div\" className=\"mt-2\">\n              {({ open }) => (\n                <>\n                  <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-blue-900 bg-blue-100 rounded-lg hover:bg-blue-200 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 focus-visible:ring-opacity-75\">\n                    <span>Размер</span>\n                    <ChevronUpIcon\n                      className={`${\n                        open ? 'transform rotate-180' : ''\n                      } w-5 h-5 text-blue-500`}\n                    />\n                  </Disclosure.Button>\n                  <Disclosure.Panel className=\"px-4 pt-4 pb-2 text-sm text-gray-500 text-left\">\n                      Фильтры по цене\n                  </Disclosure.Panel>\n                </>\n              )}\n            </Disclosure>\n          </div>\n        </div>\n        <button className=\"mt-4 flex items-center w-full px-4 py-2 text-sm font-medium text-left text-blue-900 bg-blue-100 rounded-lg hover:bg-blue-200 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 focus-visible:ring-opacity-75\">\n          <CheckIcon className=\"w-4 h-4 mr-2\" />\n          Подтвердить\n        </button>\n    </aside>\n  )\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport axios from 'axios';\n\nexport const getMarketData = createAsyncThunk(\n  \"auth/signup\",\n  async (thunkAPI) => {\n    try {\n      const response = await axios.get(\"/showcase\")\n\n      let data = response.data;\n      console.log(\"data\", data);\n\n      if (response.status === 200) {\n        return data;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log(\"Error\", e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  marketplaceData: [],\n}\n\nconst marketplaceSlice = createSlice({\n  name: 'marketplace',\n  initialState,\n  reducers: {\n  \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getMarketData.fulfilled, (state, action) => {\n        state.marketplaceData = action.payload\n      })\n  },\n});\n\nexport const {\n\n} = marketplaceSlice.actions\nexport default marketplaceSlice.reducer","import React, { useRef } from \"react\";\n\nimport { parseDatahub } from \"./datahubSlice\";\nimport toast from 'react-hot-toast';\nimport { useDispatch } from \"react-redux\";\n\nexport default function DatahubAuth() {\n  const dispatch = useDispatch()\n  const urlRef = useRef(null)\n  const usernameRef = useRef(null)\n  const passwordRef = useRef(null)\n  \n  const submitHandler = () => {\n    const url = urlRef.current.value\n    const username = usernameRef.current.value\n    const password = passwordRef.current.value\n\n    if (!url || !username || !password) {\n      toast.error(\"Заполните все поля\")\n    } else {\n      dispatch(parseDatahub({url, username, password}))\n    }\n  }\n\n  return (\n      <div className=\"mx-4 inline-block p-6 overflow-hidden text-left align-middle transition-all transform bg-white rounded-3xl border\">\n        <h3 className=\"text-lg font-medium leading-6 text-gray-900\">\n          Введите данные своего Datahub Аккаунта\n        </h3>\n        <div className=\"mt-2\">\n          <p className=\"text-sm text-gray-500\">\n            После авторизации вашего datahub вы сможете манипулировать своими датасетами на нешй платформе.\n          </p>\n        </div>\n        <div className=\"mt-4\">\n          <label htmlFor=\"link\" className=\"font-semibold text-sm text-gray-600 pb-1 block\">Ссылка на datahub</label>\n          <input\n            ref={urlRef}\n            type=\"text\"\n            name=\"link\"\n            className=\"w-full md:w-full rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            placeholder={localStorage.getItem('dataHubUrl')}\n          />\n        </div>\n        \n        <div className=\"mt-2 flex\">\n          <div className=\"flex-1 mt-2 mr-4\">\n            <label htmlFor=\"login\" className=\"font-semibold text-sm text-gray-600 pb-1 block\">Логин</label>\n            <input\n              ref={usernameRef}\n              type=\"text\"\n              name=\"login\"\n              className=\"w-full md:w-full rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            />\n          </div>\n          <div className=\"flex-1 mt-2 ml-4\">\n            <label htmlFor=\"pass\" className=\"font-semibold text-sm text-gray-600 pb-1 block\">Пароль</label>\n            <input\n              ref={passwordRef}\n              type=\"password\"\n              name=\"pass\"\n              className=\" w-full md:w-full rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4\">\n          <button\n            type=\"button\"\n            className=\"cursor-pointer inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n            onClick={submitHandler}\n          >\n            Отправить\n          </button>\n        </div>\n      </div>\n  )\n}\n","import DatasetInfo from './datasetInfo/DatasetInfo'\nimport Marketplace from './marketplace/Marketplace'\nimport Profile from './Profile/Profile'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst pageToComponent = {\n  \"Профиль\": Profile,\n  \"Каталог\": Marketplace,\n  \"Датасет\": DatasetInfo\n}\n\nexport default function MainContent() {\n  const currentPage = useSelector(state => state.sidebar.currentPage)\n\n  return React.createElement(\n    pageToComponent[currentPage]\n  )\n}\n","import DatahubAuth from '../datahub/DatahubAuth'\nimport DatasetList from '../DatasetList'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function Profile() {\n  const dataHubData = useSelector(state => state.datahub.dataHubData)\n\n  return (\n    <div className=\"flex flex-col py-4 px-4\">\n      <DatahubAuth />\n      {!!dataHubData.length && (\n        <h1 className=\"leading-7 font-bold text-2xl mt-8 mb-4 text-blue-500 text-left ml-4\">Ваши датасеты</h1>\n      )}\n      <DatasetList list={dataHubData}/>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport DatasetList from '../DatasetList'\nimport MarketplaceFilters from './MarketplaceFilters'\nimport { getMarketData } from './marketplaceSlice'\n\nexport default function Marketplace() {\n  const dispatch = useDispatch()\n  const marketplaceData = useSelector(state => state.marketplace.marketplaceData)\n\n  useEffect(() => {\n    dispatch(getMarketData())\n  }, [])\n\n  return (\n    <div className=\"flex\">\n      <div className=\"mr-80 py-4 px-4 w-full\">\n        <h1 className=\"leading-7 font-bold text-2xl mb-4 mt-2 text-blue-500 text-left ml-4\">Каталог датасетов</h1>\n        {marketplaceData.length > 0 && (\n          <DatasetList list={marketplaceData}/>\n        )}\n      </div>\n      <MarketplaceFilters />\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.c4e6b36c.svg\";","import { useDispatch, useSelector } from 'react-redux'\n\nimport { RadioGroup } from '@headlessui/react'\nimport logo from '../../images/logo.svg'\nimport { setPage } from './sidebarSlice'\nimport { useHistory } from 'react-router'\n\nexport default function Sidebar() {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const currentPage = useSelector(state => state.sidebar.currentPage)\n\n  const signOutHandler = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('dataHubUrl')\n    history.push('sign-in')\n  }\n\n  return (\n    <div className=\"fixed inset-y-0 left-0 max-w-full flex\">\n      <div className=\"relative w-screen max-w-xs\">\n        <div className=\"h-full flex flex-col pt-6 bg-white border-r overflow-y-scroll\">\n          <div className=\"px-4 sm:px-6 flex w-full justify-around items-center\">\n            <img src={logo} alt=\"logo\" className=\"h-6\"/>\n            <h1 className=\"text-lg font-medium text-gray-900\">{localStorage.getItem('companyName')}</h1>\n          </div>\n          <div className=\"mt-6 relative flex-1 px-4 sm:px-6\">\n            <RadioGroup value={currentPage} onChange={(page) => dispatch(setPage(page))}>\n              <RadioGroup.Option value=\"Профиль\" className=\"outline-none\">\n                {({ checked }) => (\n                  <button className={`${checked ? 'bg-blue-500' : 'hover:bg-blue-500 text-gray-800 hover:text-white transition duration-150 ease-in-out'} text-white py-5 px-3 rounded w-full`}>Профиль</button>\n                )}\n              </RadioGroup.Option>\n              <RadioGroup.Option value=\"Каталог\" className=\"mt-4 outline-none\">\n                {({ checked }) => (\n                  <button className={`${checked ? 'bg-blue-500' : 'hover:bg-blue-500 text-gray-800 hover:text-white transition duration-150 ease-in-out'} text-white py-5 px-3 rounded w-full`}>Каталог</button>\n                )}\n              </RadioGroup.Option>\n            </RadioGroup>\n          </div>\n          <button onClick={signOutHandler} className=\"text-gray-800 transition duration-150 ease-in-out bg-gray-50 hover:bg-gray-200 py-5 px-3 w-full\">Выйти</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useEffect} from 'react'\n\nimport MainContent from '../components/MainContent'\nimport Sidebar from '../components/sidebar/Sidebar'\nimport axios from 'axios'\n\nexport default function Main() {\n\n  useEffect(() => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`\n  }, [])\n\n  return (\n    <>\n      <Sidebar />\n      <div className=\"ml-80 h-screen removeScroll\">\n        <MainContent />\n      </div>\n    </>\n  )\n}\n","import { Redirect, Route } from 'react-router-dom'\n\nimport React from 'react'\n\nexport function ProtectedRoute ({component: Component, ...rest}) {\n\n  return (\n    <Route {...rest} render={\n      (props) => {\n        if (localStorage.getItem('token')) {\n          return <Component {...props}/>\n        } else {\n          return <Redirect to={\n            {\n              pathname: \"/sign-up\",\n              state: {\n                from: props.location\n              }\n            }\n          }/>\n        }\n      }\n    }/>\n  )\n}\n\n","import { Link, useHistory } from 'react-router-dom';\nimport React, { useEffect, useRef } from 'react'\nimport { clearState, signup } from './authSlice'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport registrationImage from '../../images/registration.svg'\nimport styles from './auth.module.css'\nimport toast from 'react-hot-toast'\n\nexport default function Registration() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const isError = useSelector(state => state.auth.isError)\n  const isFetching = useSelector(state => state.auth.isFetching)\n  const isSuccess = useSelector(state => state.auth.isSuccess)\n\n  const companyRef = useRef(null)\n  const loginRef = useRef(null)\n  const passwordRef = useRef(null)\n  const loading = useRef(null)\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearState())\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isError) {\n      if (loading.current) toast.dismiss(loading.current)\n      toast.error(\"Произошла ошибка. Повторите попытку\")\n      companyRef.current.value = null\n      loginRef.current.value = null\n      passwordRef.current.value = null\n    }\n  }, [isError])\n  \n  useEffect(() => {\n    if (isFetching) {\n      if (loading.current) toast.dismiss(loading.current)\n      loading.current = toast.loading('Загрузка...')\n    }\n  }, [isFetching])\n\n  useEffect(() => {\n    if (isSuccess) {\n      if (loading.current) toast.dismiss(loading.current)\n      history.push('/')\n    }\n  }, [isSuccess])\n\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    const companyName = companyRef.current.value\n    const login = loginRef.current.value\n    const password = passwordRef.current.value\n\n    if (!companyName || !login || !password) {\n      toast.error(\"Заполните все поля\")\n    } else {\n      dispatch(signup({companyName, login, password}))\n    }\n  }\n\n  return (\n    <div className={`${styles.authBg}`}>\n      <div className=\"w-full h-screen filter blur-3xl absolute opacity-70 bg-white\">&nbsp;</div>\n      <div className=\"min-h-screen flex justify-center items-center py-12 px-6 lg:px-8\">\n        <div className=\"flex justify-center shadow-xl border border-gray-100 rounded-lg overflow-hidden z-50\">\n\n          <div className=\"sm:max-w-md bg-white border-r border-gray-100 py-2 px-4 flex flex-col\">\n            <h2 className=\"mt-6 text-center text-2xl font-extrabold text-gray-900\">Создайте Аккаунт</h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600 max-w\">\n              Уже Зарегестрированны?\n              <Link to=\"/sign-in\" className=\"font-medium text-blue-600 hover:text-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"> Войти</Link>\n            </p>\n            <div className=\"my-auto w-72\">\n              <img className=\"w-full\" src={registrationImage} alt=\"Workflow\" />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <div className=\"bg-white py-8 px-6 sm:px-10\">\n              <form className=\"mb-0 space-y-6\" onSubmit={submitHandler}>\n                <div>\n                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700\">Компания</label>\n                  <div className=\"mt-1\">\n                    <input ref={companyRef} id=\"company\" name=\"company\" type=\"text\" autoComplete=\"vtb-company\" />\n                  </div>\n                </div>\n                <div>\n                  <label htmlFor=\"login\" className=\"block text-sm font-medium text-gray-700\">Логин</label>\n                  <div className=\"mt-1\">\n                    <input ref={loginRef} id=\"login\" name=\"login\" type=\"text\" autoComplete=\"vtb-login\" />\n                  </div>\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Пароль</label>\n                  <div className=\"mt-1\">\n                    <input ref={passwordRef} id=\"password\" name=\"password\" type=\"password\" autoComplete=\"vtb-password\" />\n                  </div>\n                </div>\n                <div>\n                  <button type=\"submit\" className=\"mt-20 w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">Зарегестрироваться</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import './App.css'\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport { Counter } from './components/counter/Counter'\nimport Login from './components/auth/Login'\nimport Main from './Pages/Main'\nimport { ProtectedRoute } from './services/ProtectedRoute'\nimport React from 'react'\nimport Registration from './components/auth/Registration'\nimport { Toaster } from 'react-hot-toast'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Toaster\n          position=\"top-center\"\n          reverseOrder={false}\n        />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/sign-up' component={Registration}/>\n            <Route exact path='/sign-in' component={Login}/>\n            <ProtectedRoute exact path='/' component={Main}/>\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import authReducer from '../components/auth/authSlice'\nimport { configureStore } from '@reduxjs/toolkit'\nimport counterReducer from '../components/counter/counterSlice'\nimport datahubReducer from '../components/datahub/datahubSlice'\nimport datasetModalReducer from '../components/datasetInfo/datasetInfoSlice'\nimport marketplaceReducer from '../components/marketplace/marketplaceSlice'\nimport sidebarReducer from '../components/sidebar/sidebarSlice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer,\n    sidebar: sidebarReducer,\n    datahub: datahubReducer,\n    marketplace: marketplaceReducer,\n    datasetInfo: datasetModalReducer\n  },\n})\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, from } from \"@apollo/client\"\n\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { onError } from \"@apollo/client/link/error\"\nimport { setContext } from '@apollo/client/link/context';\nimport { store } from './app/store';\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (networkError) {\n    if ( networkError.statusCode === 401 ) {\n      window.location.replace('/login')\n      localStorage.removeItem('token')\n    }\n  }\n  if (graphqlErrors) {\n    graphqlErrors.forEach(({ message }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst httpLink = from([\n  errorLink,\n  new HttpLink({ uri: \"/graphql\" }),\n]);\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__2k2JV\",\"value\":\"Counter_value__3eew2\",\"button\":\"Counter_button__1vsxJ\",\"textbox\":\"Counter_textbox__ZPPax\",\"asyncButton\":\"Counter_asyncButton__3dTYl Counter_button__1vsxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authBg\":\"auth_authBg__3pJFF\"};"],"sourceRoot":""}